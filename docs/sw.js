const CACHE_NAME="story-app-cache-v2",urlsToCache=["/","/index.html","/app.bundle.js","/app.css","/manifest.json","/favicon.png","/images/2b3e1faf89f94a483539.png","/images/8f2c4d11474275fbc161.png","/images/416d91365b44e4b4f477.png","/images/680f69f3c2e6b90c1812.png","/images/a0c6cc1401c107b501ef.png"];self.addEventListener("install",(e=>{self.skipWaiting(),e.waitUntil(caches.open(CACHE_NAME).then((e=>e.addAll(urlsToCache))).catch((e=>{console.error("Failed to cache during install:",e)})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return caches.delete(e)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{"GET"===e.request.method&&!e.request.url.startsWith("chrome-extension")&&e.request.url.startsWith(self.location.origin)&&e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>{if(!t||200!==t.status||"basic"!==t.type)return t;const s=t.clone();return caches.open(CACHE_NAME).then((t=>{t.put(e.request,s)})),t})))))}));